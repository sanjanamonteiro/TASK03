# 1. Import and preprocess the dataset
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# 1: Load dataset (replace with your actual dataset)
df = pd.read_csv('/content/Housing.csv')
# Preprocess if needed (e.g., handle missing values, encode categorical variables)
# df = df.dropna()  # Example for missing values

# 2. Split data into train-test sets
X = df[['area']]   # Replace with your feature columns (as DataFrame)
y = df['price']      # Replace with your target column
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Fit a Linear Regression model using sklearn.linear_model
lr = LinearRegression()
lr.fit(X_train, y_train)

# 4. Evaluate model using MAE, MSE, R²
y_pred = lr.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"MAE: {mae:.2f}")
print(f"MSE: {mse:.2f}")
print(f"R²: {r2:.2f}")

# 5. Plot regression line and interpret coefficients
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Regression line')
plt.xlabel('Feature')
plt.ylabel('Target')
plt.legend()
plt.title('Linear Regression Fit')
plt.show()

# Coefficient interpretation
print(f"Intercept: {lr.intercept_}")
print(f"Coefficient(s): {lr.coef_}")
